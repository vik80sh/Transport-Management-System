-- MySQL Script generated by MySQL Workbench
-- 07/12/16 10:41:25
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema TMS
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `TMS` ;

-- -----------------------------------------------------
-- Schema TMS
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `TMS` DEFAULT CHARACTER SET utf8 ;
USE `TMS` ;

-- -----------------------------------------------------
-- Table `TMS`.`admin`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TMS`.`admin` ;

CREATE TABLE IF NOT EXISTS `TMS`.`admin` (
  `uname` VARCHAR(20) NOT NULL,
  `passwd` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`uname`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `uname_UNIQUE` ON `TMS`.`admin` (`uname` ASC);


-- -----------------------------------------------------
-- Table `TMS`.`branch`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TMS`.`branch` ;

CREATE TABLE IF NOT EXISTS `TMS`.`branch` (
  `ID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `branchID_UNIQUE` ON `TMS`.`branch` (`ID` ASC);

CREATE UNIQUE INDEX `name_UNIQUE` ON `TMS`.`branch` (`name` ASC);


-- -----------------------------------------------------
-- Table `TMS`.`salary`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TMS`.`salary` ;

CREATE TABLE IF NOT EXISTS `TMS`.`salary` (
  `ID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `salary` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `ID_UNIQUE` ON `TMS`.`salary` (`ID` ASC);

CREATE UNIQUE INDEX `salary_UNIQUE` ON `TMS`.`salary` (`salary` ASC);


-- -----------------------------------------------------
-- Table `TMS`.`manager`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TMS`.`manager` ;

CREATE TABLE IF NOT EXISTS `TMS`.`manager` (
  `uname` VARCHAR(20) NOT NULL,
  `passwd` VARCHAR(20) NOT NULL,
  `name` VARCHAR(30) NULL,
  `dob` DATE NULL,
  `doj` DATE NULL,
  `branch_ID` INT UNSIGNED NOT NULL,
  `salary_ID` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`uname`),
  CONSTRAINT `fk_manager_branch`
    FOREIGN KEY (`branch_ID`)
    REFERENCES `TMS`.`branch` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_manager_salary1`
    FOREIGN KEY (`salary_ID`)
    REFERENCES `TMS`.`salary` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `uname_UNIQUE` ON `TMS`.`manager` (`uname` ASC);

CREATE INDEX `fk_manager_branch_idx` ON `TMS`.`manager` (`branch_ID` ASC);

CREATE INDEX `fk_manager_salary1_idx` ON `TMS`.`manager` (`salary_ID` ASC);


-- -----------------------------------------------------
-- Table `TMS`.`model`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TMS`.`model` ;

CREATE TABLE IF NOT EXISTS `TMS`.`model` (
  `ID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `model` VARCHAR(30) NOT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `ID_UNIQUE` ON `TMS`.`model` (`ID` ASC);

CREATE UNIQUE INDEX `model_UNIQUE` ON `TMS`.`model` (`model` ASC);


-- -----------------------------------------------------
-- Table `TMS`.`insurance`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TMS`.`insurance` ;

CREATE TABLE IF NOT EXISTS `TMS`.`insurance` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `company` VARCHAR(30) NOT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `ID_UNIQUE` ON `TMS`.`insurance` (`ID` ASC);

CREATE UNIQUE INDEX `company_UNIQUE` ON `TMS`.`insurance` (`company` ASC);


-- -----------------------------------------------------
-- Table `TMS`.`owner`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TMS`.`owner` ;

CREATE TABLE IF NOT EXISTS `TMS`.`owner` (
  `ID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(30) NOT NULL,
  `tel` VARCHAR(15) NOT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `ID_UNIQUE` ON `TMS`.`owner` (`ID` ASC);

CREATE UNIQUE INDEX `name_UNIQUE` ON `TMS`.`owner` (`name` ASC);


-- -----------------------------------------------------
-- Table `TMS`.`routes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TMS`.`routes` ;

CREATE TABLE IF NOT EXISTS `TMS`.`routes` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `from` VARCHAR(30) NOT NULL,
  `to` VARCHAR(30) NOT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `ID_UNIQUE` ON `TMS`.`routes` (`ID` ASC);


-- -----------------------------------------------------
-- Table `TMS`.`status`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TMS`.`status` ;

CREATE TABLE IF NOT EXISTS `TMS`.`status` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `status` VARCHAR(30) NOT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `status_UNIQUE` ON `TMS`.`status` (`status` ASC);


-- -----------------------------------------------------
-- Table `TMS`.`truck`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TMS`.`truck` ;

CREATE TABLE IF NOT EXISTS `TMS`.`truck` (
  `num` VARCHAR(20) NOT NULL,
  `insurance` TINYINT(1) NOT NULL,
  `model_ID` INT UNSIGNED NOT NULL,
  `insurance_ID` INT NOT NULL,
  `owner_ID` INT UNSIGNED NOT NULL,
  `routes_ID` INT NOT NULL,
  `status_ID` INT NOT NULL,
  PRIMARY KEY (`num`),
  CONSTRAINT `fk_truck_model1`
    FOREIGN KEY (`model_ID`)
    REFERENCES `TMS`.`model` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_truck_insurance1`
    FOREIGN KEY (`insurance_ID`)
    REFERENCES `TMS`.`insurance` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_truck_owner1`
    FOREIGN KEY (`owner_ID`)
    REFERENCES `TMS`.`owner` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_truck_routes1`
    FOREIGN KEY (`routes_ID`)
    REFERENCES `TMS`.`routes` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_truck_status1`
    FOREIGN KEY (`status_ID`)
    REFERENCES `TMS`.`status` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `num_UNIQUE` ON `TMS`.`truck` (`num` ASC);

CREATE INDEX `fk_truck_model1_idx` ON `TMS`.`truck` (`model_ID` ASC);

CREATE INDEX `fk_truck_insurance1_idx` ON `TMS`.`truck` (`insurance_ID` ASC);

CREATE INDEX `fk_truck_owner1_idx` ON `TMS`.`truck` (`owner_ID` ASC);

CREATE INDEX `fk_truck_routes1_idx` ON `TMS`.`truck` (`routes_ID` ASC);

CREATE INDEX `fk_truck_status1_idx` ON `TMS`.`truck` (`status_ID` ASC);


-- -----------------------------------------------------
-- Table `TMS`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TMS`.`user` ;

CREATE TABLE IF NOT EXISTS `TMS`.`user` (
  `name` VARCHAR(30) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `tel` VARCHAR(15) NULL,
  `website` VARCHAR(45) NULL,
  PRIMARY KEY (`email`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `email_UNIQUE` ON `TMS`.`user` (`email` ASC);


-- -----------------------------------------------------
-- Table `TMS`.`queries`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TMS`.`queries` ;

CREATE TABLE IF NOT EXISTS `TMS`.`queries` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `msg` LONGTEXT NULL,
  `user_id` INT NOT NULL,
  `user_email` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `fk_queries_user1`
    FOREIGN KEY (`user_email`)
    REFERENCES `TMS`.`user` (`email`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `ID_UNIQUE` ON `TMS`.`queries` (`ID` ASC);

CREATE INDEX `fk_queries_user1_idx` ON `TMS`.`queries` (`user_id` ASC, `user_email` ASC);

USE `TMS` ;

-- -----------------------------------------------------
-- Placeholder table for view `TMS`.`managerLogin`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TMS`.`managerLogin` (`uname` INT, `passwd` INT, `name` INT);

-- -----------------------------------------------------
-- View `TMS`.`managerLogin`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `TMS`.`managerLogin` ;
DROP TABLE IF EXISTS `TMS`.`managerLogin`;
USE `TMS`;
CREATE  OR REPLACE VIEW `managerLogin` AS
SELECT manager.uname, manager.passwd, branch.name from manager
join branch on manager.branch_ID = branch.ID;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
